# Generated by Django 5.0.6 on 2024-06-04 13:42

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Interface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, null=True)),
                ('description', models.CharField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Interface',
                'verbose_name_plural': 'Interfaces',
            },
        ),
        migrations.CreateModel(
            name='LayergroupTreeitem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordering', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LayerWmts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('layer', models.CharField()),
                ('style', models.CharField(blank=True, null=True)),
                ('matrix_set', models.CharField(blank=True, null=True)),
                ('image_type', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name': 'Couche WMTS',
                'verbose_name_plural': 'Couches WMTS',
            },
        ),
        migrations.CreateModel(
            name='OgcServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(unique=True)),
                ('description', models.CharField(blank=True, null=True)),
                ('url', models.URLField()),
                ('url_wfs', models.URLField(blank=True, null=True)),
                ('type', models.CharField()),
                ('image_type', models.CharField()),
                ('auth', models.CharField()),
                ('wfs_support', models.BooleanField(blank=True, null=True)),
                ('is_single_tile', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Serveur OGC',
                'verbose_name_plural': 'Serveurs OGC',
            },
        ),
        migrations.CreateModel(
            name='Shorturl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, null=True)),
                ('ref', models.CharField(max_length=20, unique=True)),
                ('creator_email', models.CharField(blank=True, max_length=200, null=True)),
                ('creation', models.DateTimeField(blank=True, null=True)),
                ('last_hit', models.DateTimeField(blank=True, null=True)),
                ('nb_hits', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'URl courte',
                'verbose_name_plural': 'URls courtes',
            },
        ),
        migrations.CreateModel(
            name='Treegroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Functionality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
                ('value', models.CharField()),
                ('description', models.CharField(blank=True, null=True)),
                ('group', models.ManyToManyField(to='auth.group')),
            ],
            options={
                'verbose_name': 'Fonctionnalité',
                'verbose_name_plural': 'Fonctionnalités',
            },
        ),
        migrations.CreateModel(
            name='HistoricalFunctionality',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField()),
                ('value', models.CharField()),
                ('description', models.CharField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Fonctionnalité',
                'verbose_name_plural': 'historical Fonctionnalités',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalInterface',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(blank=True, null=True)),
                ('description', models.CharField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Interface',
                'verbose_name_plural': 'historical Interfaces',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLayerWmts',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('url', models.URLField()),
                ('layer', models.CharField()),
                ('style', models.CharField(blank=True, null=True)),
                ('matrix_set', models.CharField(blank=True, null=True)),
                ('image_type', models.CharField(max_length=10)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Couche WMTS',
                'verbose_name_plural': 'historical Couches WMTS',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOgcServer',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True)),
                ('description', models.CharField(blank=True, null=True)),
                ('url', models.URLField()),
                ('url_wfs', models.URLField(blank=True, null=True)),
                ('type', models.CharField()),
                ('image_type', models.CharField()),
                ('auth', models.CharField()),
                ('wfs_support', models.BooleanField(blank=True, null=True)),
                ('is_single_tile', models.BooleanField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Serveur OGC',
                'verbose_name_plural': 'historical Serveurs OGC',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRestrictionarea',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(blank=True, null=True)),
                ('description', models.CharField(blank=True, null=True)),
                ('readwrite', models.BooleanField(blank=True, null=True)),
                ('area', django.contrib.gis.db.models.fields.PolygonField(null=True, srid=4326)),
                ('buffer', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Aire de restriction',
                'verbose_name_plural': 'historical Aires de restriction',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRole',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('description', models.CharField(blank=True, null=True)),
                ('extent', django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=4326)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('group', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='auth.group')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Role',
                'verbose_name_plural': 'historical Roles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTheme',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('icon', models.CharField(blank=True, null=True)),
                ('ordering', models.IntegerField()),
                ('public', models.BooleanField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Thème',
                'verbose_name_plural': 'historical Thèmes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public', models.BooleanField(blank=True, null=True)),
                ('geo_table', models.CharField(blank=True, null=True)),
                ('exclude_properties', models.CharField(blank=True, null=True)),
                ('interface', models.ManyToManyField(to='themes.interface')),
            ],
            options={
                'verbose_name': 'Couche',
                'verbose_name_plural': 'Couches',
            },
        ),
        migrations.CreateModel(
            name='HistoricalLayerVectortiles',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('style', models.CharField()),
                ('xyz', models.CharField(blank=True, null=True)),
                ('sql', models.CharField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('layer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='themes.layer')),
            ],
            options={
                'verbose_name': 'historical Vector Tile',
                'verbose_name_plural': 'historical Vector Tiles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDimension',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(blank=True, null=True)),
                ('value', models.CharField(blank=True, null=True)),
                ('description', models.CharField(blank=True, null=True)),
                ('field', models.CharField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('layer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='themes.layer')),
            ],
            options={
                'verbose_name': 'historical Dimension',
                'verbose_name_plural': 'historical Dimensions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Dimension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, null=True)),
                ('value', models.CharField(blank=True, null=True)),
                ('description', models.CharField(blank=True, null=True)),
                ('field', models.CharField(blank=True, null=True)),
                ('layer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='themes.layer')),
            ],
            options={
                'verbose_name': 'Dimension',
                'verbose_name_plural': 'Dimensions',
            },
        ),
        migrations.CreateModel(
            name='LayerVectortiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('style', models.CharField()),
                ('xyz', models.CharField(blank=True, null=True)),
                ('sql', models.CharField(blank=True, null=True)),
                ('layer', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='layervectortile', to='themes.layer')),
            ],
            options={
                'verbose_name': 'Vector Tile',
                'verbose_name_plural': 'Vector Tiles',
            },
        ),
        migrations.CreateModel(
            name='LayerWms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('layer', models.CharField()),
                ('style', models.CharField(blank=True, null=True)),
                ('time_mode', models.CharField()),
                ('time_widget', models.CharField()),
                ('valid', models.BooleanField(blank=True, null=True)),
                ('invalid_reason', models.CharField(blank=True, null=True)),
                ('ogc_server', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='themes.ogcserver')),
            ],
            options={
                'verbose_name': 'Couche WMS',
                'verbose_name_plural': 'Couches WMS',
            },
        ),
        migrations.CreateModel(
            name='HistoricalLayerWms',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('layer', models.CharField()),
                ('style', models.CharField(blank=True, null=True)),
                ('time_mode', models.CharField()),
                ('time_widget', models.CharField()),
                ('valid', models.BooleanField(blank=True, null=True)),
                ('invalid_reason', models.CharField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('ogc_server', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='themes.ogcserver')),
            ],
            options={
                'verbose_name': 'historical Couche WMS',
                'verbose_name_plural': 'historical Couches WMS',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Restrictionarea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, null=True)),
                ('description', models.CharField(blank=True, null=True)),
                ('readwrite', models.BooleanField(blank=True, null=True)),
                ('area', django.contrib.gis.db.models.fields.PolygonField(null=True, srid=4326)),
                ('buffer', models.TextField(blank=True, null=True)),
                ('group', models.ManyToManyField(to='auth.group')),
                ('layer', models.ManyToManyField(to='themes.layer')),
            ],
            options={
                'verbose_name': 'Aire de restriction',
                'verbose_name_plural': 'Aires de restriction',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, null=True)),
                ('extent', django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=4326)),
                ('group', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='role', to='auth.group')),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.CharField(blank=True, null=True)),
                ('ordering', models.IntegerField()),
                ('public', models.BooleanField()),
                ('functionality', models.ManyToManyField(to='themes.functionality')),
                ('group', models.ManyToManyField(to='auth.group')),
                ('interface', models.ManyToManyField(related_name='theme_interface', to='themes.interface')),
                ('layergrouptreeitem', models.ManyToManyField(related_name='theme', to='themes.layergrouptreeitem')),
            ],
            options={
                'verbose_name': 'Thème',
                'verbose_name_plural': 'Thèmes',
                'ordering': ['ordering'],
            },
        ),
        migrations.AddField(
            model_name='layergrouptreeitem',
            name='treegroup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='themes.treegroup'),
        ),
        migrations.CreateModel(
            name='Layergroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('treegroup', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='layergroup', to='themes.treegroup')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalLayergroup',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('treegroup', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='themes.treegroup')),
            ],
            options={
                'verbose_name': 'historical layergroup',
                'verbose_name_plural': 'historical layergroups',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Treeitem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=10)),
                ('name', models.CharField()),
                ('description', models.CharField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Groupe de couche',
                'verbose_name_plural': 'Groupe de couches',
                'unique_together': {('type', 'name')},
            },
        ),
        migrations.AddField(
            model_name='treegroup',
            name='treeitem',
            field=models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='treegroup', to='themes.treeitem'),
        ),
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, null=True)),
                ('value', models.CharField(blank=True, null=True)),
                ('description', models.CharField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='themes.treeitem')),
            ],
            options={
                'verbose_name': 'Métadonnée',
                'verbose_name_plural': 'Métadonnées',
            },
        ),
        migrations.AddField(
            model_name='layergrouptreeitem',
            name='treeitem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='themes.treeitem'),
        ),
        migrations.AddField(
            model_name='layer',
            name='treeitem',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='layer', to='themes.treeitem'),
        ),
        migrations.CreateModel(
            name='HistoricalMetadata',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(blank=True, null=True)),
                ('value', models.CharField(blank=True, null=True)),
                ('description', models.CharField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='themes.treeitem')),
            ],
            options={
                'verbose_name': 'historical Métadonnée',
                'verbose_name_plural': 'historical Métadonnées',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLayergroupTreeitem',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('ordering', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('treegroup', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='themes.treegroup')),
                ('treeitem', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='themes.treeitem')),
            ],
            options={
                'verbose_name': 'historical layergroup treeitem',
                'verbose_name_plural': 'historical layergroup treeitems',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLayer',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('public', models.BooleanField(blank=True, null=True)),
                ('geo_table', models.CharField(blank=True, null=True)),
                ('exclude_properties', models.CharField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('treeitem', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='themes.treeitem')),
            ],
            options={
                'verbose_name': 'historical Couche',
                'verbose_name_plural': 'historical Couches',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Tsearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, null=True)),
                ('layer_name', models.CharField(blank=True, null=True)),
                ('ts', models.TextField(blank=True, null=True)),
                ('the_geom', models.TextField(blank=True, null=True)),
                ('public', models.BooleanField(blank=True, null=True)),
                ('params', models.CharField(blank=True, null=True)),
                ('lang', models.CharField(blank=True, max_length=2, null=True)),
                ('actions', models.CharField(blank=True, null=True)),
                ('from_theme', models.BooleanField(blank=True, null=True)),
                ('interface', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='themes.interface')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='themes.role')),
            ],
        ),
    ]
